*** v3r8p1 ***
- Minimum TrueTimeInterval for the alg_values increased from 5 to 10 s.
* Relevant jira(s): GDQMQ-226


*** v3r8p0 ***
- Added a utility script to map the alarms on the plots.


*** v3r7p0 ***
- Possibility to select asymmetric fit ranges for the Cal Ped/Gain and the
Acd Ped analyzers implemented.
- Add the correct error bars to the output histograms of the Cal Ped/Gain and
the Acd Ped analyzers.
- Added the distribution of the mean, rms and reduced chisquare to the
output root file from the Cal Ped/Gain and the Acd Ped analyzers.
- Minor improvements to the plots appearance for the Cal Ped/Gain and the
Acd Ped analyzers.
- Added a switch to the Cal gain analyzer to get rid of the highest bin in
the left/right plots (unphysical spikes).
* Relevant jira(s): GDQMQ-215


*** v3r6p0 ***
- New feature implemented in the leftmost_edge algorithm. Now the sliding
window loop does not necessarily start from the first bin. A generic
x value can be set from the xml configuration file. This improves the speed a
lot and potentially makes the algorithms more stable.
* Relevant jira(s): GDQMQ-210


*** v3r5p0 ***
- Minor bug fix in alg__values and test function removed as it was broken.
- Exceptions taken into account when setting the output value in
alg__spikes_and_holes
- Exception violations put back in.
* Relevant jira(s): GDQMQ-188


*** v3r4p4 ***
- Update to pGlobal, added the number of channels per ACD cable
* Relevant jira(s): GDQMQ-1


*** v3r4p3 ***
- Minor improvement: errors not displayed for trending plots with no
associated errors (used to look as +- 0.000).


*** v3r4p2 ***
- Minor aesthetics change in pAlarmBaseAlgorithm---the algorithm names were
mispelled.
- Different way to associate the branch arrays to the relative errors in
alg__values; now it's more general and gracefully handles Hiro's trackermon
quantities---though it was not crashing before and gave the same number. It
essentially suppresses a ROOT warning.
- Cast to float in pAlarmiLimits.getBadness() added to prevent numpy to
return inf upon ZeroDivision error.
* Relevant jira(s): GDQMQ-206


*** v3r4p1 ***
- Minor bug fix.


*** v3r4p0 ***
- New alg__leftmost_edge_slices algorithm.
- Minor bug fix in alg__values.
- alg__x_min_bin_slices improved taking advantage of the improvements in the
base class since v3r3p0.
* Relevant jira(s): GDQMQ-52


*** v3r3p5 ***
- Threshold for the minimum TrueTimeInterval in alg__values changed from
1s to 5 s.
- Explanatory label added to the alarm handler xml output.


*** v3r3p4 ***
- Check on the TrueTimeInterval implemented to prevent the alarms on the
trending quantities from firing on tiny time bins.
- Fix for the DoubleDiffRate, which do not have associated errors in the tree.


*** v3r3p3 ***
- One more zero division error bug fix. And yes, different from the previous
tag. Hopefully the last one...
* Relevant jira(s): GDQMQ-204


*** v3r3p2 ***
- One more zero division error bug fix.
* Relevant jira(s): GDQMQ-204


*** v3r3p1 ***
- Bug fix in the spikes_and_holes alarm algorithm.
* Relevant jira(s): GDQMQ-202


*** v3r3p0 ***
- Error bars on the trending plots should be now correctly handled.
- More improvements in the alarm outputs.
* Relevant jira(s): GDQMQ-147


*** v3r2p1 ***
- Got the timestamp right for the alarms on the trending quantities.
- Improved formatting of error details.
- Exception mechanism implemented for the alarms on the trending quantities.
Also a partial bug fix related to the exceptions themselves.
* Relevant jira(s): GDQMQ-188


*** v3r2p0 ***
- Handling of the error bars in the alg__values algoruthm rolled back due to a
bug; need more work to have a functional version.
- Error representation for the trending quantities improved.
* Relevant jira(s): GDQMQ-57


*** v3r1p6 ***
- Now a pAlarm object is instantiated for each pAlarmSet object, even when
the corresponding ROOT object cannot be found in the file. The corresponding
output status is set to UNDEFINED and it appears in the summary. Usefull for
debug to make sure we don't screw up thing when messing around with the
variable names.
* Relevant jira(s): GDQMQ-159


*** v3r1p5 ***
- Debug message added in the ACD/CAL peds/gains fitting tool.
* Relevant jira(s): GDQMQ-65


*** v3r1p4 ***
- Bug fix in the ACD/CAL peds/gains fitting tool (check on a zero division
error)
* Relevant jira(s): GDQMQ-65


*** v3r1p3 ***
- Bug fix in the ACD/CAL peds/gains fitting tool (the fit is not performed
when there are no entries in a histogram).
* Relevant jira(s): GDQMQ-65


*** v3r1p2 ***
- Minor bug fix in the ACD/CAL peds/gains fitting tool (now if an histogram is
missing in the input file, the program issues an error instead of crashing).
* Relevant jira(s): GDQMQ-65


*** v3r1p1 ***
- Minor bug fix in the alarm postprocessing tool (wrong import).
- "_TH1" added to the postprocessing tool output histograms name, as requested
by Max.
* Relevant jira(s): GDM-27


*** v3r1p0 ***
- Added a post-processing tool to make distributions of the alarm outputs
(requires dataMonitoring/AlarmsCfg v1r1p0 or later).
* Relevant jira(s): GDM-27


*** v3r0p15 ***
- Added the plot of the chisquare probability into the fitting tool for CAL and
ACD pedestals/gains.
* Relevant jira(s): GDQMQ-65


*** v3r0p14 ***
- +-inf removed from the alarm limits.
* Relevant jira(s): GDM-80


*** v3r0p13 ***
- The set of tools for fitting ACD pedestals and CAL peds/gains is now in a
reasonable shape, with many improvements and bug fixes. Not yet in the
pipeline, so no change in the basic functionality at the moment.
* Relevant jira(s): GDQMQ-65


*** v3r0p12 ***

- More work done on the fitting tool for the CAL pedestals/gains. Some work
done on getting the normalization and rms values right for the modified
gaussian function. Not yet in the pipeline, so no change in the basic
functionality at the moment.
* Relevant jira(s): GDQMQ-65


*** v3r0p11 ***

- Bug fix in the alarm handler (a variable in pAlarmBaseAlgorithm was
referenced before assignment).
* Relevant jira(s): GDQMQ-78


*** v3r0p10 ***

- Handling of error bars into the alg__values algorithm.
* Relevant jira(s): GDQMQ-57


*** v3r0p9 ***

- New script for fitting cal pedestals and gain ratios at the end of the run,
if needed. Should have *no impact at all* on all the other pieces of code
already running in the pipeline.
* Relevant jira(s): GDQMQ-65


*** v3r0p8 ***

- Old script meant for comparing the FastMon plots to the corresponding digi
ones replaced with a new and better version. It writes an output xml
summary file.
* Relevant jira(s): GDQMQ-46


*** v3r0p7 ***

- Algorithm running on the trending root trees modified as to disable the
unused tree branches in each event loop. There's a 2.5 gain in processing time
on a standard digi file.


*** v3r0p6 ***

- doc/relese.notes removed (I know I messed up, here...)
* Relevant jira(s): GDQMQ-64


*** v3r0p5 ***

- doc/relese.notes moved to doc/release.notes
* Relevant jira(s): GDQMQ-64


*** v3r0p4 ***

- Some modification to the ACD tiles dimensions/rate correcting factors
(to be used in the alarms).
- Minor change in the way the alarm output status is evaluated (a >= and a <=
changed with a > and a < respectively). It affects only the bounduary
cases where the output value is right on one of the limits.
- Piece of code for calculating the cal gains added. Not yet used, though.
* Relevant jira(s): GDQMQ-48, GDQMQ-65


*** v3r0p3 ***

- New module for normalizing ACD quantities to tile position/area added.
It gets imported into pXmlBaseElement for being used by the alarm handler xml
parser, but there's no change in functionality at the moment.
* Relevant jira(s): GDQMQ-48


*** v3r0p2 ***

- release.notes added.
* Relevant jira(s): GDQMQ-64


*** v3r0p1 ***

- Couple of new algorithms for finding peaks added to the alarm handler.


*** v3r0p0 ***

- Baseline for the software freeze.
