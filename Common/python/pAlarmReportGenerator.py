
import os
import sys
import commands
import time

import pUtils

from pBaseReportGenerator import pBaseReportGenerator


class pAlarmReportGenerator(pBaseReportGenerator):

    MAIN_PAGE_TITLE = 'Alarm handler report'
    REPORT_AUTHOR   = 'Automatically generated by pAlarmHandler.py'

    def __init__(self, alarmHandler, outputDirPath, forceOverwrite = True):
        self.AlarmHandler = alarmHandler
        pBaseReportGenerator.__init__(self, outputDirPath ,\
                                      self.MAIN_PAGE_TITLE,\
                                      self.REPORT_AUTHOR,  \
                                      forceOverwrite = True)
        self.AlarmsStatusLabels  = ['UNDEFINED', 'ERROR', 'WARNING', 'CLEAN']
        self.SummaryTablesHeader = ['Object name', 'Algorithm', 'Status',\
                                    'Output value', 'Limits', 'details']
        self.SummaryTablesDict   = {}
        for label in self.AlarmsStatusLabels:
            self.SummaryTablesDict[label] = []

    def run(self):
        self.fillSummaryTables()
        self.openReport()
        self.addSection('alarms_output', 'Alarms output')
        for label in self.AlarmsStatusLabels:
            subsectionLabel = 'alarms_%s' % label.lower()
            subsectionTitle = 'Alarms with %s status' % label
            tableName       = 'Alarms table'
            tableCaption    = 'Alarms with %s status.' % label
            self.addSubsection(subsectionLabel, subsectionTitle)
            self.addTable(self.SummaryTablesHeader       ,\
                          self.SummaryTablesDict[label]  ,\
                          tableName, tableCaption)
        self.closeReport()
        self.compileReport()

    def fillSummaryTables(self):
        for alarm in self.AlarmHandler.XmlParser.getEnabledAlarms():
            status = alarm.getStatusLabel()
            self.SummaryTablesDict[status].append(alarm.getTableSummaryRow())
    

if __name__ == '__main__':
    generator = pAlarmReportGenerator('./report', 'Base report')

