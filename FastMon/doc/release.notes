** @file release.notes
 * Package FastMon
 * Coordinator: Luca Baldini <luca.baldini@pi.infn.it>
 *
 *                  EOH

 FastMon-05-03-03 01-Dec-2014 lbaldini Bug fix in the way we handle M7 datetimes as inputs to IGRF.
- Bug fix in the way we calculate the (floating point year-equivalent) of the
  date and time in the M7 file to be passed to the IGRF package to initialize
  the Geomagnetic field model. Essentially the patch changes the old
  implementation
  yearfloat = year + month/12.
  to 
  yearfloat = year + (month - 1)/12. + (day - 1)/365.


 FastMon-05-03-02 26-Feb-2014 bregeon just fix last patch release notes
 FastMon-05-03-01 26-Feb-2014 bregeon bug fix pM7Parser::getSCPosition as per GDQMQ-368
- Bug fix: bug fix getSCPosition, check if the M7 value returned is within 60 s of the requested space craft time
* Relevant Jira(s): GDQMQ-368

 FastMon-05-03-00 12-Oct-2012 lbaldini Printout and xml output suppressed for events with *only* GTCC_FIFO errors.
- Printout and xml output suppressed for events with *only* GTCC_FIFO errors.
* Relevant Jira(s): GDQMQ-367


 FastMon-05-02-01 06-Jan-2011 bregeon add logging for real phase errors -- GDQMQ-336
- Improvement: add logging for real phase error in pErrorHandler.py and pErrorEvent.py.
* Relevant Jira(s): GDQMQ-336


 FastMon-05-02-00 24-Jun-2010 lbaldini Bug fix for the FastMon crashing on empty M7 files.
- Bug fix for preventing the FastMon from crashing on empty input M7 files.
* Relevant Jira(s): GDQMQ-347


 FastMon-05-01-02 24-Jun-2010 lbaldini Orbit line in the 2d plot reappearing
- Minimal changes in order to prevent the orbit line from disappearing with
ROOT 5.26.
* Relevant Jira(s): GDQMQ-346


 FastMon-05-01-01 15-Jan-2010 bregeon fix clock tick deviation calculus and add SAA 2d plot
*** v5r1p1 ***
- python/pEvtMetaContextProcessor.py
  bug fix - GDQMQ-331 - calculate clock ticks deviation ony when
  current AND previous time tones are complete as in Digi EOR
- python/pEvtMetaContextProcessor.py
  bug fix for the rollover of the clock tick dev calculus - GDQMQ-325
- Added script to generate the 2d plot of the orbit with the SAA ovelaid
(required some minor modifications to the pSAAPolygon class).


 FastMon-05-01-00 05-Aug-2009 bregeon upgrade to v5r1p0 - first stag tag as 05-01-00
*** v5r1p0 ***
- Test program added to read a m7 file and make plots of the orbit and dstance
to the SAA.
- Some more work for the calculation of the distance to the SAA. Still pretty
rough, but first reasonable implementation.
- New small module pTETEUtils.py added to the repository to handle the
transformation between the J2000 and the True Equator True Equinox (TETE)
systems.


*** v5r0p0 ***
Quite a few files modified to accomodate the plot of the distance to the SAA.
The detailed description of the changes is:
- pDataProcessor.py: one more command line option added (-s) to pass the
  xml file with the definition of the SAA.
- pGeomagProcessor.py: added filling of the output tree with the distance to
  the SAA variable.
- pM7Parser.py: new class member (the SAA polygon) added.
- pSAAPolygon.py: EARTH_RADIUS not imported anymore from pSCPosition due to
  an import clash.
- pSCPosition.py: added a new class member (the SAA polygon) and a new
  method returning the distance of a generic point from the polygon itself.
* Relevant jira(s): GDQMQ-311


*** v4r5p1 ***
- pCustomPlotter.py : The input tree is now cloned before being used, and in
  particular copy with cuts to create the plots. For some reason I do not
  understand, this fixes the crash seen with ROOT version greater than
  v5.18.00. The trick work with v5.20 and is backward compatible with 5.18.
* Relevant jira(s): GDQMQ-266


*** v4r5p0 ***
- Always do a CopyTree even when there is no cut, it seems more reliable
  pCustomPlotter.py
- Sort list of plots before creating them and add some logging to know
   which plot is cbeing done : pFastMonTreeProcessor.py
- Update getExpandedExpression() to add only _ and not a full suffix
  pXmlOutputList.py
- Needs FastMonCfg v1r6p0
* Relevant jira(s): GDQMQ-258


*** v4r4p1 ***
- Update error handling using a new function provided by Ric to automatically
  log the error type for ALL iterators.
- TEM_BUG are still tagged as such in the ERR contribution but
  in the TKR contribution iterator  UnphysStrip, BadStripOrder, UnPhysTOT and
  TooManyHits are not anymore counted as TEM_BUG, the bug should be catched
  earlier.
- The function LookupErrorCode(obj, code) is defined in
  Common/python/pGlobals.py v4r9p0
  This means that this version of FastMon (>v4r4p0) REQUIRES  Common >= v4r9p0
* Relevant jira(s): GDQMQ-257


*** v4r3p2 ***
- error_summary is filled in __postEvent : pDataProcessor
* Relevant jira(s): GDQMQ-254


*** v4r3p1 ***
- When FASTMON_DUMP_ERRORS_TO_FILE is set to true, the events with an error
  are dumped to a file calling the new method __dumpEventToFile.
  For debugging purpose only : pDataProcessor
* Relevant jira(s): GDQMQ-253


*** v4r3p0 ***
- Add spacecraft_orbit_mode and spacecraft_orbit_inSAA, read them from magic7,
  pass them to the updated pSCPosition constructor, add get methods, and fill
  quantities in the pGeomagProcessor in pM7Parser.py pSCPosition.py
  pGeomagProcessor.py
* Relevant jira(s): GDQMQ-195


*** v4r2p2 ***
- Add the seconds_elapsed to the error summary: pXmlErrorMerger
* Relevant jira(s): GDQMQ-251


*** v4r2p1 ***
- Add the seconds_elapsed to the error summary: pErrorHandler.py
- Give number of seconds elapsed to the ErrorHandler: pDataProcessor.py 
- Add ERR_TrgParityError to the handleError(),
  to synced with the last LDF developments, pLATcomponentIterator.py
- Bug fix in gtrcPhaseError, pERRcontributionIteratorBase.py
* Relevant jira(s): GDQMQ-251

*** v4r2p0 ***
- Update old files to v3r5p6 after the tags were lost
  Hopefully, everything is OK now. I hate cvs even more than before.

*** v4r1p5 ***
- Bug fix, event number was not correctly reported in pErrorHandler
* Relevant jira(s): GDQMQ-197

*** v4r1p4 ***
- Change histogram name AcdHitsCounter_CableChannel_TH2 to
  AcdHitMap_GafeGarc_TH2, and swap axis to match the Digi definition,
  in pCustomPlotter
- Log the LDF version in pDataProcessor
* Relevant jira(s): GDQMQ-243 and GDQMQ-244


*** v4r1p3 ***
- Add back cmt requirements file
  It had disappeared from the latest tag


*** v4r1p2 ***
- pCustomPlotter tagged with the ACD plot in elx space
  It had disappeared from the latest tag


*** v4r1p1 ***
- Looks like an old version of pXmlInputList was tagged.
  I fixed it and tagged again. 


*** v4r1p0 ***
- Retag things below after removing a wrong tag.
  Hopefully, everything is OK now. I hate cvs.


*** v4r0p0 ***
- Work only with LDF > 6.4.0
- Improve handling of errors following the new version of the LDF,
  all kind of errors now taken into account : pAEMcontributionIteratorBase.py
- Use the logger to dump debug message in case of an error:
  pCALcontributionIteratorBase.py
- Improve handling of errors following the new version of the LDF, 
  all kind of errors now taken into account : pEBFeventIterator.py
- Improve handling of errors following the new version of the LDF,
  all kind of errors now taken into account. 
  TEM_BUG is now known and reported as such : pERRcontributionIteratorBase.py
- New error contributions added for each iterators.
  ACD renamed as AEM :  pError.py
- New error bits added. ACD renamed as AEM.
  LAT_DATAGRAM and EBF_EVENT have the same code : pErrorEvent.py
- Improve handling of errors following the new version of the LDF,
  all kind of errors now taken into account. Note that the new LDF code
  checks the status of the iterator and exits whenever a serious error is
  found.
  pLATcomponentIterator.py
- Improve handling of errors following the new version of the LDF, 
  all kind of errors now taken into account : pLATcontributionIterator.py
- Use the logger to dump debug message in case of an error:
  pLATdatagramIterator.py
- Improve handling of errors following the new version of the LDF,
  all kind of errors now taken into account. 
  TEM_BUG is now known and reported as such : pTKRcontributionIteratorBase.py
* Relevant jira(s): GDQMQ-197


*** v3r5p6 ***
- pErrorEvent : Move the TIMETONE errors to the lowest bits so that it is
  easier not to cut them out but cutting real errors applying
  Error_summary < 64 - GDQMQ-173
- pError : Reorganize error dictionnary to take into account new errors
  reported by  the new version of the LDF. For now, I do not store the details
  of the errors reported by the different subsystems, besides the TEM_BUG.
- GDQMQ-197
* Relevant jira(s): GDQMQ-173 GDQMQ-197


*** v3r5p5 ***
- Minor improvements in the interface to the output of pErrorEvent.
- More informations added to the error summary xml and some internal
improvements.
- pFastMonReportGenerator updated accordingly.
- Merging script modified to accomodate the changes.


*** v3r5p4 ***
- Bug fix in pSCPosition Ra axis pointing calculation,
  folding in 2Pi was not done correctly
* Relevant jira(s): GDQMQ-212


*** v3r5p3 ***
- Added a plot to monitor the ACD occupancy in electronic space
  AcdHitsCounter_CableChannel_TH2 give the occupancy per ACD cable, channel
  AcdHitChannel[12][18] is the associated tree variable.
* Relevant jira(s): GDQMQ-1


*** v3r5p2 ***
- New error_summary variable added (new FastMonCfg v1r4p0). 
* Relevant jira(s): GDQMQ-173


*** v3r5p1 ***
- Cable tags added to the details of the phasing errors.
- Improved xml output for the error handler.
- Error documentation moved from the old text file to the python class file.
- Error summary parsing added.
- New error_summary variable added. 
* Relevant jira(s): GDQMQ-197, GDQMQ-173


*** v3r5p0 ***
- Event iterators changed to detect instances of the TEM firmware bug and not to
care of unphysical strips anymore.
* Relevant jira(s): GDQMQ-197


*** v3r4p2 ***
- pSCPosition and pGeomagProcessor : Add Z axis pointing in galactic
coordinates L,B 
* Relevant jira(s): GDQMQ-193


*** v3r4p1 ***
- pM7Parser.py : Verify that the magic 7 starts with an ATT tag, tweak it if
it s not the case script.
* Relevant jira(s): GDQMQ-194


*** v3r4p0 ***
- Committed new file for merging the xml summary files from the
ErrorHandler---this fixes a bug in the old script.
* Relevant jira(s): LONE-70


*** v3r3p3 ***
- Bug fix in pLATcomponentIterator : handleError now always return 0
* Relevant jira(s): GDQMQ-192


*** v3r3p2 ***
- Bug fix in pSCposition getRockAngle was implemented twice, I do not even
understand how that could work.
* Relevant jira(s): GDQMQ-187


*** v3r3p1 ***
- Added a get method for the earth limb angle in pSCPosition
  and added the quantity in pGeoMagProcessor
* Relevant jira(s): GDQMQ-6


*** v3r3p0 ***
- Added the following quantities in pGeoMagProcessor : x and y axis Ra and
Dec, earth limb infov, rock angle
- pSCPosition : Implement calculus of the earh limb, that looks ok, and a
first trial at the arc angle
  of the earth limb in the field of view, not OK. GDQMQ-6
- pSCPosition : Major changes - Reorganize methods to get the axis pointing
and FIX BUG in the calculation
  of the Rock angle that is now OK. GDQMQ-160 and GDQMQ-167
- pSCPosition : Major upgrade of the class with new members for X, Y and Z
axis pointing in RA and DEC, new calculation and access methods, and BUG FIX
for the ZRa and ZDec calculation, the quaternion was not defined as usual
(w, x, y, z) but stands as (x, y ,z, w) in the magic7. ZRa and ZDec are now
correct, so should it be for X and Y axis. GDQMQ-160 and GDQMQ-167.
* Relevant jira(s): GDQMQ-6, GDQMQ-160 and GDQMQ-167

*** v3r2p3 ***
- Bug fix in Julian Date calculation, that was the cause of the wrong latitude
and longitude. GDQMQ-133. 
- Added X-axis Ra and Dec pointing copying on Zaxis methods that are however
probably wrong. GDQMQ-160 and GDQMQ-167 
* Relevant jira(s): GDQMQ-133, GDQMQ-160 and GDQMQ-167


*** v3r2p2 ***
- Bug fix  FastMon Bug in pM7Parser when there is an invalid index in the 
  pSCPosition list. FastMin still not able to handle an empty/corrupted M7 file.
* Relevant jira(s): GDQMQ-156

*** v3r2p1 ***
- Bug fix when calculating the phi angle of the 3D Position vector, now using safer ROOT.TVector3 methods,
  Longitudes looks nicer. 
* Relevant jira(s): GDQMQ-133

*** v3r2p0 ***
- Now handling LATC_master key in LPA runs with meta.hardwareKey and in LCI runs with meta.writeCfg.
* Relevant jira(s): GDQMQ-145 

*** v3r1p5 ***
- Bug Fix, change modf to fmod in the routine calculating the longitude in
  pSCPosition.py, as done in ST astro package.
* Relevant jira(s): GDQMQ-133 

*** v3r1p4 ***
- Added quantity evt_data_transfer_id that contains de data transfer id
  and fixed meta_context_run_id that now contains the real run id, aka run.startedat.
* Relevant jira(s): GDQMQ-115

*** v3r1p3 ***
- Added quantities meta_LATC_master, aka meta.hardwareKey, and
meta.softwareKey for good measure. This is the hardware configuration for the
current run. 
* Relevant jira(s): GDQMQ-107

*** v3r1p2 ***
- Added a function to process the PrescaledDelta in pGEMcontributionBase
* Relevant jira(s): GDQMQ-102

*** v3r1p1 ***
- Added the processing of the quantity new_second that is True for the first
  event for which the second has changed, in python/pEvtMetaContextProcessor.py. 
  new_second is to be used in fastmon trending  
* Relevant jira(s): GDQMQ-103

*** v3r1p0 ***
- Improved the calculation of clocktics_dev_20MHz :
  It is now done only if the context incomplete flag is not set.
  Initialization is done using the context.previous time hack
  Better integration with Time tone error handler.
* Relevant jira(s): GDQMQ-104 and 105

*** v3r0p17 ***
- pSCPostion now retireve the satellite z-axis Ra and Dec from  the attitude 
  quaternion into, information are saved via pGeomagProcessor. 
* Relevant jira(s): GDQMQ-62

*** v3r0p16 ***
- pSCPostion now convert the attitude quaternion into Euleur angles (pitch,
  roll and yaw), information are saved via pGeomagProcessor. Bug fix when
  reading the quaternion in pM7Parser.
* Relevant jira(s): GDQMQ-62

*** v3r0p15 ***
- pEvtMetaContextProcessor now processes the TimeTone errors, via the
  ErrorHandler.
  Error handler documentation was updated.
* Relevant jira(s): GDQMQ-70


*** v3r0p14 ***
- pDataProcessor modified as to use the internal event counter 
  (instead of the GEM event sequence) as event number for the error handler 
  ONLY when processing an .ldf file. 
  This change has no impact on processing .evt file.
* Relevant jira(s): GDQMQ-96


*** v3r0p13 ***

- Add the quantity clocktics_dev_20MHz that counts the number of tics between
  1pps and gives the deviation with respect to expected 20MHz in
  pEvtMetaEventProcessor.py 
* Relevant jira(s): GDQMQ-70


*** v3r0p12 ***
- Spacecraft latitude and longitude are now in degrees instead of radian.
  Conversion is done in pSCPosition
* Relevant jira(s): GDQMQ-63


*** v3r0p11 ***

- Added meta_context_current_earlyevent and meta_context_previous_earlyevent
  in pEvtMetaEventProcessor.py
* Relevant jira(s): GDQMQ-70


*** v3r0p10 ***

- Bug fix in the script generating the text configuration file for the merging
from the FastMon xml configuration file. 
* Relevant jira(s): GDQMQ-71


*** v3r0p9 ***

- Release notes updated with references to the relevant jira. No change in any
of the functionalities at all.


*** v3r0p8 ***

- FastMon now reads the Spacecraft attitude quaternion from the magic7 file
and the quantity is saved in the pSCPosition objects. This is a first step
towards having the Ra,Dec Rock and Roll angles in FastMon as for GDQMQ-62.
Documentation updated accordingly. 
* Relevant jira(s): GDQMQ-62


*** v3r0p7 ***

- The error handler now detects unphysical TOT values (251, 252, 253, 254).
Documentation updated accordingly.
* Relevant jira(s): GDQMQ-58


*** v3r0p6 ***

- FastMon/python/pMergeHistosMaker.py (the script creating the configuration
text file for merging the FastMon histograms) updated to the new package
layout (FastMonCfg is now a separate package).


*** v3r0p5 ***

- missingGps changed to sourceGps.
- release.notes added.
* Relevant jira(s): GDQMQ-43, GDQMQ-64


*** v3r0p4 *** 

- Added a new check on the ACD readout consistency (and a new error type,
ACD_PHA_INCONSISTENCY).
* Relevant jira(s): GDQMQ-41


*** v3r0p3 *** 

- Some useless error checks removed (on tower ids and cal layer ids) from the
error handler.


*** v3r0p2 ***

- Bug fix---tracebeack due to an unhandled index error exception caused by
unphyisical strip id removed.


*** v3r0p1 ***

- Some improvements to the error handler, including some modification to the
output xml file and error codes documentation.


*** v3r0p0 ***

- Baseline for the software freeze.
