<monitoring>
  <inputList name="top"> 

    <!-- Time stamp -->
    <object> timestampdouble </object>
    
    <!-- Trigger related vars -->
    <object>GltWord</object>  <!-- TO BE DELETED at some point, use GltGemSummary instead!! -->
    <object>GltGemSummary </object> 
    <object>EvtEventId </object>
    <object>TriggerEngine </object>
    <object>OBFStatus </object> 
    <object>FswFilters</object>
    <object>FswGamState</object>
    <object>FswGAMMAEnergyInLeus</object>

    
    <!-- Filter variables -->
<!--    <object>FilterStatus_HI</object> obsolete-->
    <object>MeritObfGamStatus</object>

    <!-- ACD -->
    <object>AcdCornerDoca</object>
    <object>AcdTileCount</object>
    <object>AcdRibbonCount </object>
 
    <object>AcdActiveDist3D </object>
    <object>AcdTkr1ActiveDist </object>
    <object>AcdTkr1ActDistTileEnergy </object>
    <object>AcdRibbonActDist </object>
    <object>AcdRibbonEnergy </object>
    <object>AcdTotalEnergy </object>
    <object>AcdActDistTileEnergy </object>

    
    
    <!-- Tracker -->

     <object>TkrTwrEdge </object>
    <object> Tkr1TwrGap</object>
    <object> Tkr1LATEdge</object>

    <object> TkrSurplusHCInside</object>
    <object> TkrThinHits</object>
    <object> TkrThickHits</object>
    <object> TkrBlankHits</object>
    <object> TkrNumTracks</object>

  <!--   <object> TkrSurplusHitsInside </object>-->
      <object> TkrSurplusHitRatio </object>

      <object> Tkr1KalEne </object> 
      <object> Tkr1KalThetaMS </object>
      <object> GrbXDir </object>
      <object> GrbYDir </object>
      <object> GrbZDir </object>

      <!-- Calorimeter -->

     <!-- <object> CalMipNum </object> OBSOLETE -->
    <object> CalEnergyRaw </object>
    <object> CalEnergyCorr</object>

    <object> CalCsIRLn </object>
    <object> CalTwrEdgeCntr </object>
    <object> CalTrackAngle</object>

    <object> CalTransRms </object>
    <object> CalMIPRatio </object>

<!--    
    <object> </object>
    <object> </object>
    <object> </object>

    <object> </object>
    <object> </object>
    <object> </object>

    <object> </object>
    <object> </object>
    <object> </object>
    -->

    <!-- CTB variables -->
        
    <object>CTBBestZDir</object>		
    <object>CTBClassLevel</object>		
    <object>CTBBestEnergyProb</object>
    <object>CTBCORE</object>			
    <object>CTBBestEnergy</object>		
    <object>CTBBestEnergyRatio</object>
    <object>CTBParticleType</object>

    <!-- <object> CTBGAM</object>  OBSOLETE -->
    <object> CTBCalDocaAngle </object>

    <!-- FT1 variables -->

    <object> FT1Energy </object>
    <object> FT1Theta </object>
    <object> FT1Phi </object>
    <object> FT1ZenithTheta </object>
    <object> FT1EarthAzimuth </object>
    <object> FT1EventClassBitMap </object> 
    <object> FT1Ra </object> 
    <object> FT1Dec </object> 

    <!-- Pt parameters --> 

     <object> PtMcIlwainB </object>
    <object> PtMcIlwainL </object>
    <object> PtLat </object>
    <object> PtLon </object>
    <object> PtMagLat </object>
    <object> PtSCzenith </object>

    <!-- Others -->
    <object> EvtCREventClassBitMap </object>

   
  </inputList>


  <outputList name="top">
  
    <!-- Gem quantities -->

    <object>
      <name> GltWord </name>
      <formula><![CDATA[ GltWord ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of GltWord</description>
    </object>

     <object>
      <name> GltGemSummary</name>
      <formula><![CDATA[ GltGemSummary ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of GltGemSummary</description>
    </object>

    <!-- Pt parameters --> 

    <object>
      <name>  PtMcIlwainB </name>
      <formula><![CDATA[  PtMcIlwainB  ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value  of  PtMcIlwainB</description>
    </object>

      <object>
      <name>  PtMcIlwainL </name>
      <formula><![CDATA[ PtMcIlwainL  ]]></formula>
      <cut><![CDATA[PtMcIlwainL>0.1]]></cut>
      <type> mean </type>
      <description> Mean value  of PtMcIlwainL</description>
    </object>

       <object>
      <name>  RigidityCutoff </name>
      <formula><![CDATA[ 14.56/(PtMcIlwainL*PtMcIlwainL)  ]]></formula>
      <cut><![CDATA[PtMcIlwainL>0.1]]></cut>
      <type> mean </type>
      <description> Mean value of Rigidity cutoff (GeV) </description>
    </object>
      
      <object>
      <name> PtLat </name>
      <formula><![CDATA[ PtLat  ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value  of PtLat</description>
    </object>

      <object>
      <name> PtLon </name>
      <formula><![CDATA[ PtLon  ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value  of PtLon</description>
    </object>

        <object>
      <name> PtMagLat </name>
      <formula><![CDATA[ PtMagLat  ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value  of PtMagLat</description>
    </object>

    <object>
      <name> PtSCzenith </name>
      <formula><![CDATA[ PtSCzenith  ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value  of PtSCzenith</description>
    </object>
	

    <!-- RAtes -->

    <object>
      <name> EvtsBeforeFilters </name>
      <formula><![CDATA[ EvtEventId ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <type> counterdiffrate[10000,17,MC] </type>
      <description> Rate of evts before any filter (computed using MeritTuple->EvtEventId) </description>
    </object>


    <object>
      <name> NormRateEvtsBeforeFilters </name>
      <formula><![CDATA[ RFun::NormalizeRate("CounterDiffRate_EvtsBeforeFilters",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, CounterDiffRate_EvtsBeforeFilters, CounterDiffRate_EvtsBeforeFilters_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of events before applicaltion of filters. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

    <object>
      <name> NormRateEvtsBeforeFilters_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("CounterDiffRate_EvtsBeforeFilters",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, CounterDiffRate_EvtsBeforeFilters, CounterDiffRate_EvtsBeforeFilters_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of events before applicaltion of filters. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

    <object>
      <name> EvtsBeforeCuts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <type> rate </type>
      <description> Rate of events before applicaltion of cuts.</description>
    </object>

    <object>
      <name> NormRateEvtsBeforeCuts </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_EvtsBeforeCuts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_EvtsBeforeCuts, Rate_EvtsBeforeCuts_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of events before applicaltion of cuts. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>


    <object>
      <name> NormRateEvtsBeforeCuts_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_EvtsBeforeCuts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_EvtsBeforeCuts, Rate_EvtsBeforeCuts_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Error in Normalized Rate of events before applicaltion of cuts. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>


    <object>
      <name> EvtsBeforeCutsWithGAMMAFilter </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ OBFStatus[0]>0 ]]></cut>
      <type> rate </type>
      <description> Rate of events before applicaltion of cuts that survive the Gleam GAMMA filter</description>
    </object>

     <object>
      <name> EvtsBeforeCutsWithFswGAMMAFilter </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FswGamState==0 ]]></cut>
      <type> rate </type>
      <description> Rate of events before applicaltion of cuts that survive the Flight Sowftware GAMMA filter</description>
    </object>

     <object>
      <name> NormRateEvtsBeforeCutsWithGAMMAFilter </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_EvtsBeforeCutsWithGAMMAFilter",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_EvtsBeforeCutsWithGAMMAFilter, Rate_EvtsBeforeCutsWithGAMMAFilter_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of events before applicaltion of cuts that survive the Gleam GAMMA filter. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

     <object>
      <name> NormRateEvtsBeforeCutsWithGAMMAFilter_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_EvtsBeforeCutsWithGAMMAFilter",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_EvtsBeforeCutsWithGAMMAFilter, Rate_EvtsBeforeCutsWithGAMMAFilter_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Error in normalized rate of events before applicaltion of cuts that survive the Gleam GAMMA filter. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>


     <object>
      <name> NormRateEvtsBeforeCutsWithFswGAMMAFilter </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_EvtsBeforeCutsWithGAMMAFilter",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_EvtsBeforeCutsWithFswGAMMAFilter, Rate_EvtsBeforeCutsWithFswGAMMAFilter_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of events before applicaltion of cuts that survive the Flight Sowftware GAMMA filter. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

     <object>
      <name> NormRateEvtsBeforeCutsWithFswGAMMAFilter_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_EvtsBeforeCutsWithGAMMAFilter",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_EvtsBeforeCutsWithFswGAMMAFilter, Rate_EvtsBeforeCutsWithFswGAMMAFilter_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Error in normalized rate of events before applicaltion of cuts that survive the Flight Software GAMMA filter. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>


     

      <object>
      <name> EvtsBeforeCutsBelow100ZenithTheta</name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events before application of gamma selection cuts that survive the cut FT1ZenithTheta smaller than 100.</description>
    </object>

    <object>
      <name> EvtsBeforeCuts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1Energy>100 ]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy larger than 100 MeV, before applicaltion of cuts.</description>
    </object>

    

     <object>
      <name> EvtsBeforeCutsBelow100ZenithTheta_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1ZenithTheta<100 && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events before application of gamma selection cuts that survive the cut FT1ZenithTheta smaller than 100 and FT1Energy larger than 100 MeV.</description>
    </object>


    

     <object>
      <name> EvtsBeforeCutsAbove100ZenithTheta </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1ZenithTheta>100 ]]></cut>
      <type> rate </type>
      <description> Rate of events before application of gamma selection cuts that survive the cut FT1ZenithTheta larger than 100.</description>
    </object>



     <object>
      <name> TransientEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[0]  ]]></cut>
      <type> rate </type>
      <description> Rate of events after application of TRANSIENT gamma cuts from pass7. </description>
    </object>
  

      <object>
      <name> NormRateTransientEvts </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_TransientEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_TransientEvts, Rate_TransientEvts_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of transient events. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

      <object>
      <name> NormRateTransientEvts_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_TransientEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_TransientEvts, Rate_TransientEvts_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Error in Normalized Rate of transient events. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>


     <object>
      <name> TransientEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[0]  && FT1Energy>100 ]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of TRANSIENT gamma cuts from pass7. </description>
    </object>

    
    <object>
      <name> TransientEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[  FT1EventClassBitMap[0]  &&  FT1ZenithTheta<100  ]]></cut>
      <type> rate </type>
      <description> Rate of events after application of TRANSIENT gamma cuts from pass7 and the cut FT1ZenithTheta smaller than 100. </description>
    </object>

      


     <object>
      <name> CleanEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[3]  ]]></cut>
      <type> rate </type>
      <description> Rate of events after application of CLEAN gamma cuts from pass7. </description>
    </object>


      <object>
      <name> CleanEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[3]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of CLEAN gamma cuts from pass7. </description>
    </object>
      
    <object>
      <name> CleanEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[3]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of CLEAN gamma cuts from pass7. </description>
    </object>


      <object>
      <name> SourceEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[2]  ]]></cut>
      <type> rate </type>
      <description> Rate of events after application of SOURCE gamma cuts from pass7. </description>
    </object>



        <object>
      <name> NormRateSourceEvts </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_SourceEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_SourceEvts, Rate_SourceEvts_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of source events. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

	  <object>
      <name> NormRateSourceEvts_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_SourceEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_SourceEvts, Rate_SourceEvts_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Error in normalized Rate of source events. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

       <object>
      <name> SourceEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[  FT1EventClassBitMap[2]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of SOURCE gamma cuts from pass7. </description>
    </object>

   

    <object>
      <name> SourceEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[2]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of SOURCE gamma cuts from pass7. </description>
    </object>

    <object>
      <name> UltraCleanEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[4]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of ULTRACLEAN gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> UltraCleanEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[4]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of ULTRACLEAN gamma cuts from pass7. </description>
    </object>

    <object>
      <name> UltraCleanEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[4]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of ULTRACLEAN gamma cuts from pass7. </description>
    </object>


     <object>
      <name> S2Evts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[8]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of S2 gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> S2Evts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[8]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of S2 gamma cuts from pass7. </description>
    </object>

    <object>
      <name> S2EvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[8]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of S2 gamma cuts from pass7. </description>
    </object>


    <object>
      <name> NoCalEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[9]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of NoCal gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> NoCalEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[9]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of NoCal gamma cuts from pass7. </description>
    </object>

    <object>
      <name> NoCalEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[9]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of NoCal gamma cuts from pass7. </description>
    </object>

      
    <object>
      <name> S3Evts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[10]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of S3 gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> S3Evts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[10]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of S3 gamma cuts from pass7. </description>
    </object>

    <object>
      <name> S3EvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[10]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of S3 gamma cuts from pass7. </description>
    </object>

    <object>
      <name> CalOnlyEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[11]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of CalOnly gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> CalOnlyEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[11]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of CalOnly gamma cuts from pass7. </description>
    </object>

    <object>
      <name> CalOnlyEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[11]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of CalOnly gamma cuts from pass7. </description>
    </object>


     <object>
      <name> S3NoCalEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[12]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of S3NoCal gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> S3NoCalEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[12]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of S3NoCal gamma cuts from pass7. </description>
    </object>

    <object>
      <name> S3NoCalEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[12]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of S3NoCal gamma cuts from pass7. </description>
    </object>

     <object>
      <name> S2NoCalEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[13]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of S2NoCal gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> S2NoCalEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[13]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of S2NoCal gamma cuts from pass7. </description>
    </object>

    <object>
      <name> S2NoCalEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[13]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of S2NoCal gamma cuts from pass7. </description>
    </object>
    

     <object>
      <name> LLEEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[14]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of LLE gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> LLEEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[14]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of LLE gamma cuts from pass7. </description>
    </object>

    <object>
      <name> LLEEvts_BelowE100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[14]  && FT1Energy<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy below 100 MeV, after application of LLE gamma cuts from pass7. </description>
    </object>

    <object>
      <name> LLEEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[14]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of LLE gamma cuts from pass7. </description>
    </object>


    <object>                                                                                                 
      <name> LLEvents_BinsRaDec[8][5] </name>
      <formula><![CDATA[foreachllerabin: foreachlledecbin: RFun::IsEventInThisRaDecBin(FT1Ra, FT1Dec, llerabin, lledecbin)]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[14] ]]></cut>                                     
      <type> rate </type>                                                                                        
      <description> Two dimensional vector [8][5] reporting the rate of LLE events that fall into 40 predefined circles of 45 deg radius centered at the following RA and DEC locations: RA=[0,45,90,135,180,225,270,315], Dec=[-90,-45,0,45,90]. Note that the circles overlap and hence one event can fall into several of the above mentioned bins. Note also that the rates for Dec=-90 deg and for Dec=90 deg will be identical for all the RA bins. </description>
    </object>


    <object>
      <name> LLESSDVetoEvts </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[15]]]></cut>
      <type> rate </type>
      <description>  Rate of events after application of LLESSDVeto gamma cuts from pass7.  </description>
    </object>


    <object>
      <name> LLESSDVetoEvts_E100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[15]  && FT1Energy>100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy above 100 MeV, after application of LLESSDVeto gamma cuts from pass7. </description>
    </object>

    <object>
      <name> LLESSDVetoEvts_BelowE100MeV </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[15]  && FT1Energy<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1Energy below 100 MeV, after application of LLESSDVeto gamma cuts from pass7. </description>
    </object>

    <object>
      <name> LLESSDVetoEvtsBelowZenithTheta100 </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ FT1EventClassBitMap[15]  && FT1ZenithTheta<100]]></cut>
      <type> rate </type>
      <description> Rate of events with FT1ZenithTheta below 100 deg, after application of LLESSDVeto gamma cuts from pass7. </description>
    </object>



        <object>
      <name> MeritTriggerEngine[16]  </name>
      <formula><![CDATA[ TriggerEngine ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <type> rate </type>
      <description> Rate of Trigger Engines (DigiEvent->getL1T().getGemEngine()) </description>
    </object>


	<object>
      <name> GAMMAFilterAndTriggerEngine[16]  </name>
      <formula><![CDATA[ TriggerEngine ]]></formula>
      <cut><![CDATA[ OBFStatus[0]>0]]></cut>
      <type> rate </type>
      <description> Rate of Trigger Engines (DigiEvent->getL1T().getGemEngine()) passing the Gleam GAMMA filter </description>
    </object>

     <object>
      <name> FswGAMMAFilterAndTriggerEngine[16]  </name>
      <formula><![CDATA[ TriggerEngine ]]></formula>
      <cut><![CDATA[ FswGamState==0]]></cut>
      <type> rate </type>
      <description> Rate of Trigger Engines (DigiEvent->getL1T().getGemEngine()) passing the Flight Software GAMMA filter </description>
    </object>
      
    

     
       <object>
      <name> NormRateMeritTriggerEngine[16] </name>
      <formula><![CDATA[ foreachengine: RFun::NormalizeRateVector("Rate_MeritTriggerEngine",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_MeritTriggerEngine[engine], Rate_MeritTriggerEngine_err[engine], "NormRate", engine) ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Vector [16] with the normalized rates for the 16 TriggerEngines. The Normalization is done according to the value of PtMcIlwainL. </description>
    </object>


     
       <object>
      <name> NormRateMeritTriggerEngine_err[16] </name>
      <formula><![CDATA[ foreachengine: RFun::NormalizeRateVector("Rate_MeritTriggerEngine",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_MeritTriggerEngine[engine], Rate_MeritTriggerEngine_err[engine], "NormRateErr", engine) ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Vector [16] with the error in the normalized rates for the 16 TriggerEngines (NormRateMeritTriggerEngine[16]). The Normalization is done according to the value of PtMcIlwainL. </description>
    </object>

       
       <object>
      <name> NormRateGAMMAFilterAndTriggerEngine[16] </name>
       <formula><![CDATA[ foreachengine: RFun::NormalizeRateVector("Rate_GAMMAFilterAndTriggerEngine",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_GAMMAFilterAndTriggerEngine[engine], Rate_GAMMAFilterAndTriggerEngine_err[engine], "NormRate", engine) ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Vector [16] with the normalized evt rates surviving the Gleam GAMMA filter for the 16 TriggerEngines. The Normalization is done according to the value of PtMcIlwainL. </description>
    </object>


     
       <object>
      <name> NormRateGAMMAFilterAndTriggerEngine_err[16] </name>
      <formula><![CDATA[ foreachengine: RFun::NormalizeRateVector("Rate_GAMMAFilterAndTriggerEngine",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_GAMMAFilterAndTriggerEngine[engine], Rate_GAMMAFilterAndTriggerEngine_err[engine], "NormRateErr", engine) ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Vector [16] with the error in the normalized rates for the 16 TriggerEngines. The Normalization is done according to the value of PtMcIlwainL. </description>
    </object>



        <object>
      <name> NormRateFswGAMMAFilterAndTriggerEngine[16] </name>
       <formula><![CDATA[ foreachengine: RFun::NormalizeRateVector("Rate_GAMMAFilterAndTriggerEngine",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_FswGAMMAFilterAndTriggerEngine[engine], Rate_FswGAMMAFilterAndTriggerEngine_err[engine], "NormRate", engine) ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Vector [16] with the normalized rates for the 16 TriggerEngines. The Normalization is done according to the value of PtMcIlwainL. </description>
    </object>


     
       <object>
      <name> NormRateFswGAMMAFilterAndTriggerEngine_err[16] </name>
      <formula><![CDATA[ foreachengine: RFun::NormalizeRateVector("Rate_GAMMAFilterAndTriggerEngine",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_FswGAMMAFilterAndTriggerEngine[engine], Rate_FswGAMMAFilterAndTriggerEngine_err[engine], "NormRateErr", engine) ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Vector [16] with the error in the normalized rates for the 16 TriggerEngines. The Normalization is done according to the value of PtMcIlwainL. </description>
    </object>


       <!-- Gleam (ground) gamma filter bit -->
       
    <object>
      <name> TransientEvtsUsingGleamGammaFilter </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[  MeritObfGamStatus>0 && FT1EventClassBitMap[0]  ]]></cut>
      <type> rate </type>
      <description> Rate of events surviving the TRANSIENT gamma cuts from pass7 and the offline Gleam Gamma filter. </description>
    </object>
     
       <object>
      <name> Ratio_TransientEvts_FswGamma_GleamGamma </name>
      <formula><![CDATA[ foronetime: Rate_TransientEvtsUsingGleamGammaFilter >0 ? Rate_TransientEvts/Rate_TransientEvtsUsingGleamGammaFilter : -1.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Ratio of rates of Transient evt and Transient events surviving also the Offline Gleam GAMMA filter. </description>
    </object>

       <object>
      <name> Ratio_TransientEvts_FswGamma_GleamGamma_err </name>
      <formula><![CDATA[ foronetime: (Rate_TransientEvtsUsingGleamGammaFilter >0 && Rate_TransientEvts > 0 )? (Rate_TransientEvts/Rate_TransientEvtsUsingGleamGammaFilter)*TMath::Sqrt(pow(Rate_TransientEvtsUsingGleamGammaFilter_err/Rate_TransientEvtsUsingGleamGammaFilter,2)+pow(Rate_TransientEvts_err/Rate_TransientEvts,2)) : 0.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Error in quantity Ratio_TransientEvts_FswGamma_GleamGamma. </description>
    </object>


       <object>
      <name> SourceEvtsUsingGleamGammaFilter </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[  MeritObfGamStatus>0 && FT1EventClassBitMap[2] ]]></cut>
      <type> rate </type>
      <description> Rate of events surviving the SOURCE gamma cuts from pass7 and the offline Gleam Gamma filter. </description>
    </object>

        <object>
      <name> Ratio_SourceEvts_FswGamma_GleamGamma </name>
      <formula><![CDATA[ foronetime: Rate_SourceEvtsUsingGleamGammaFilter >0 ? Rate_SourceEvts/Rate_SourceEvtsUsingGleamGammaFilter : -1.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Ratio of rates of Source events and Source events surviving also the Offline Gleam GAMMA filter.  </description>
    </object>

       <object>
      <name> Ratio_SourceEvts_FswGamma_GleamGamma_err </name>
      <formula><![CDATA[ foronetime: (Rate_SourceEvtsUsingGleamGammaFilter >0 && Rate_SourceEvts > 0 )? (Rate_SourceEvts/Rate_SourceEvtsUsingGleamGammaFilter)*TMath::Sqrt(pow(Rate_SourceEvtsUsingGleamGammaFilter_err/Rate_SourceEvtsUsingGleamGammaFilter,2)+pow(Rate_SourceEvts_err/Rate_SourceEvts,2)) : 0.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Error in quantity Ratio_SourceEvts_FswGamma_GleamGamma. </description>
    </object>


       <object>
      <name> CleanEvtsUsingGleamGammaFilter </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[  MeritObfGamStatus>0 && FT1EventClassBitMap[3] ]]></cut>
      <type> rate </type>
      <description> Rate of events surviving the CLEAN gamma cuts from pass7 and the offline Gleam Gamma filter. </description>
    </object>

          <object>
      <name> Ratio_CleanEvts_FswGamma_GleamGamma </name>
      <formula><![CDATA[ foronetime: Rate_CleanEvtsUsingGleamGammaFilter >0 ? Rate_CleanEvts/Rate_CleanEvtsUsingGleamGammaFilter : -1.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Ratio of rates of Clean events and Clean events surviving also the Offline Gleam GAMMA filter. </description>
    </object>

       <object>
      <name> Ratio_CleanEvts_FswGamma_GleamGamma_err </name>
      <formula><![CDATA[ foronetime: (Rate_CleanEvtsUsingGleamGammaFilter >0 && Rate_CleanEvts > 0 )? (Rate_CleanEvts/Rate_CleanEvtsUsingGleamGammaFilter)*TMath::Sqrt(pow(Rate_CleanEvtsUsingGleamGammaFilter_err/Rate_CleanEvtsUsingGleamGammaFilter,2)+pow(Rate_CleanEvts_err/Rate_CleanEvts,2)) : 0.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Error in quantity Ratio_CleanEvts_FswGamma_GleamGamma. </description>
    </object>

    
       <object>
      <name> UltraCleanEvtsUsingGleamGammaFilter </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[  MeritObfGamStatus>0 && FT1EventClassBitMap[4] ]]></cut>
      <type> rate </type>
      <description> Rate of events surviving the UltraCLEAN gamma cuts from pass7 and the offline Gleam Gamma filter. </description>
    </object>

          <object>
      <name> Ratio_UltraCleanEvts_FswGamma_GleamGamma </name>
      <formula><![CDATA[ foronetime: Rate_UltraCleanEvtsUsingGleamGammaFilter >0 ? Rate_UltraCleanEvts/Rate_UltraCleanEvtsUsingGleamGammaFilter : -1.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Ratio of rates of UltraClean events and UltraClean events surviving also the Offline Gleam GAMMA filter. </description>
    </object>

       <object>
      <name> Ratio_UltraCleanEvts_FswGamma_GleamGamma_err </name>
      <formula><![CDATA[ foronetime: (Rate_UltraCleanEvtsUsingGleamGammaFilter >0 && Rate_UltraCleanEvts > 0 )? (Rate_UltraCleanEvts/Rate_UltraCleanEvtsUsingGleamGammaFilter)*TMath::Sqrt(pow(Rate_UltraCleanEvtsUsingGleamGammaFilter_err/Rate_UltraCleanEvtsUsingGleamGammaFilter,2)+pow(Rate_UltraCleanEvts_err/Rate_UltraCleanEvts,2)) : 0.0 ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type>outputfloat</type>
      <description> Error in quantity Ratio_UltraCleanEvts_FswGamma_GleamGamma. </description>
    </object>




       <object>
      <name> NormRateTransientEvtsUsingGleamGammaFilter </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_TransientEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_TransientEvtsUsingGleamGammaFilter, Rate_TransientEvtsUsingGleamGammaFilter_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of transient events passing also the Gleam Gamma Filter. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

      <object>
      <name> NormRateTransientEvtsUsingGleamGammaFilter_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_TransientEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_TransientEvtsUsingGleamGammaFilter, Rate_TransientEvtsUsingGleamGammaFilter_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Error in NormRateTransientEvtsUsingGleamGammaFilter. </description>
    </object>

      
        <object>
      <name> NormRateSourceEvtsUsingGleamGammaFilter </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_SourceEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_SourceEvtsUsingGleamGammaFilter, Rate_SourceEvtsUsingGleamGammaFilter_err, "NormRate") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Normalized Rate of source events passing also the offline Gleam Gamma Filter. The Normalization is done according to the value of PtMcIlwainL.</description>
    </object>

	  <object>
      <name> NormRateSourceEvtsUsingGleamGammaFilter_err </name>
      <formula><![CDATA[ RFun::NormalizeRate("Rate_SourceEvts",Mean_PtMcIlwainL, Mean_PtSCzenith, Mean_PtLon, Rate_SourceEvtsUsingGleamGammaFilter, Rate_SourceEvtsUsingGleamGammaFilter_err, "NormRateErr") ]]></formula>
      <cut><![CDATA[ ]]></cut>
      <source>output</source>
      <type> outputfloat </type>
      <description> Error in NormRateSourceEvtsUsingGleamGammaFilter</description>
    </object>


	
	<object>
      <name> CTBClassLevel_Bkg </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ CTBClassLevel==0 ]]></cut>
      <type> rate </type>
      <description> Rate of events that are  considered to be bkg as far as the CTBClassLevel variable is concerned (that is CTBClassLevel=0). </description>
    </object>

     

     <object>
      <name> GRB_Evt_Candidates </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ (FswGamState==0) && (GrbXDir!=0||GrbYDir!=0||GrbZDir!=0)  ]]></cut>
      <type> rate </type>
      <description> Rate of GRB Evt Candidates. These are events being passed to the onboard GRB search algorithm. These are events which pass the gamma filter and have successfully reconstructed 3D onboard tracks. </description>
    </object>


      <object>
      <name> Ratio_FswGAMMAEnergy_CalEnergyRaw </name>
      <formula><![CDATA[ FswGAMMAEnergyInLeus[0]/4./CalEnergyRaw ]]></formula>
      <cut><![CDATA[ CalEnergyRaw>10.0 && FswGAMMAEnergyInLeus[1]>0.5]]></cut>
      <type> mean </type>
      <description> Mean of the ratio FswGAMMAEnergy/CalEnergyRaw. The FswGAMMA energy is computed as FswGAMMAEnergyInLeus[0]/4. . Only events with valid energy (getEnergyValid()>0) and CalEnergyRaw>10 MeV are being used. </description>
    </object>


       <!-- ACD -->


     <object>
      <name> AcdTileCount </name>
      <formula><![CDATA[ AcdTileCount ]]></formula>
      <cut><![CDATA[  ]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdTileCount</description>
    </object>


	 <object>
      <name> AcdRibbonCount </name>
      <formula><![CDATA[ AcdRibbonCount ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdRibbonCount</description>
    </object>

       <object>
      <name> AcdCornerDoca </name>
      <formula><![CDATA[ AcdCornerDoca ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdCornerDoca</description>
    </object>

 
    <object>
      <name> AcdRibbonEnergy </name>
      <formula><![CDATA[ AcdRibbonEnergy ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdRibbonEnergy </description>
    </object>

     <object>
      <name> AcdTotalEnergy </name>
      <formula><![CDATA[ AcdTotalEnergy ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdTotalEnergy </description>
    </object>

    <object>
      <name> AcdActDistTileEnergy </name>
      <formula><![CDATA[ AcdActDistTileEnergy ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdActDistTileEnergy</description>
    </object>


    <object>
      <name> AcdTkr1ActDistTileEnergy </name>
      <formula><![CDATA[ AcdTkr1ActDistTileEnergy ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdTkr1ActDistTileEnergy </description>
    </object>

<!-- Distances will not be trended
             <object>
      <name> AcdVtxActiveDist </name>
      <formula><![CDATA[ AcdVtxActiveDist ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdVtxActiveDist</description>
    </object>


    <object>
      <name> AcdActiveDist3D </name>
      <formula><![CDATA[ AcdActiveDist3D ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdActiveDist3D</description>
    </object>

    <object>
      <name> AcdTkr1ActiveDist </name>
      <formula><![CDATA[ AcdTkr1ActiveDist ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdTkr1ActiveDist</description>
    </object>

    

    <object>
      <name> AcdRibbonActDist </name>
      <formula><![CDATA[ AcdRibbonActDist ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of AcdRibbonActDist</description>
    </object>

-->

	  <!-- Tracker-->


    
    <object>
      <name> TkrTwrEdge </name>
      <formula><![CDATA[ TkrTwrEdge ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of TkrTwrEdge</description>
    </object>

    <object>
      <name> Tkr1TwrGap </name>
      <formula><![CDATA[ Tkr1TwrGap ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of Tkr1TwrGap </description>
    </object>

    <object>
      <name> Tkr1LATEdge</name>
      <formula><![CDATA[  Tkr1LATEdge ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of Tkr1LATEdge</description>
    </object>


     <object>
      <name> TkrSurplusHCInside </name>
      <formula><![CDATA[  TkrSurplusHCInside ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of TkrSurplusHCInside </description>
    </object>

    <object>
      <name> TkrThinHits </name>
      <formula><![CDATA[ TkrThinHits ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of TkrThinHits </description>
    </object>

    <object>
      <name> TkrThickHits</name>
      <formula><![CDATA[ TkrThickHits ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of TkrThickHits</description>
    </object>

 
     <object>
      <name> TkrBlankHits </name>
      <formula><![CDATA[ TkrBlankHits ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of TkrBlankHits</description>
    </object>

<!-- It does not exist
      <object>
      <name> TkrSurplusHitsInside </name>
      <formula><![CDATA[ TkrSurplusHitsInside ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of TkrSurplusHitsInside.</description>
    </object>
-->

    <object>
      <name> TkrSurplusHitRatio </name>
      <formula><![CDATA[  TkrSurplusHitRatio ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of TkrSurplusHitRatio.</description>
    </object>

     <object>
      <name> Tkr1KalEne </name>
      <formula><![CDATA[  Tkr1KalEne ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of Tkr1KalEne.</description>
    </object>

     <object>
      <name> Tkr1KalThetaMS </name>
      <formula><![CDATA[  Tkr1KalThetaMS ]]></formula>
      <cut><![CDATA[Tkr1KalThetaMS>0.0 && Tkr1KalThetaMS<0.015 && TkrNumTracks==1 && abs(CalMIPRatio-1)<0.5 && CTBParticleType==2 ]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of Tkr1KalThetaMS.</description>
    </object>


    <!-- Calorimeter -->


    <object>
      <name> CalEnergyRaw</name>
      <formula><![CDATA[ CalEnergyRaw ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CalEnergyRaw</description>
    </object>

     <object>
      <name> CalEnergyCorr </name>
      <formula><![CDATA[ CalEnergyCorr ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CalEnergyCorr</description>
    </object>



    <object>
      <name>  CalCsIRLn </name>
      <formula><![CDATA[  CalCsIRLn  ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of  CalCsIRLn </description>
    </object>

    <object>
      <name> CalTwrEdgeCntr</name>
      <formula><![CDATA[ CalTwrEdgeCntr ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CalTwrEdgeCntr</description>
    </object>

     <object>
      <name> CalTrackAngle</name>
      <formula><![CDATA[ CalTrackAngle ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> truncatedmean[0,4] </type>
      <description> Mean value (per evt) of CalTrackAngle </description>
    </object>


     <object>
      <name> CalTransRms</name>
      <formula><![CDATA[ CalTransRms ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CalTransRms</description>
    </object>

     <!-- CTB variables -->

     
    <object>
      <name> CTBCORE</name>
      <formula><![CDATA[ CTBCORE ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CTBCORE</description>
    </object>

    <object>
      <name> CTBBestEnergy</name>
      <formula><![CDATA[ CTBBestEnergy ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CTBBestEnergy</description>
    </object>

    <object>
      <name> CTBCalDocaAngle  </name>
      <formula><![CDATA[ CTBCalDocaAngle  ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CTBCalDocaAngle </description>
    </object>

    <object>
      <name> CTBBestEnergyProb  </name>
      <formula><![CDATA[ CTBBestEnergyProb   ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CTBBestEnergyProb  </description>
    </object>

    <object>
      <name> CTBBestEnergyRatio  </name>
      <formula><![CDATA[ CTBBestEnergyRatio   ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of CTBBestEnergyRatio  </description>
    </object>

    
    <object>
      <name> CTBParticleType_initializedvalue </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ CTBParticleType== -1 ]]></cut>
      <type> rate </type>
      <description> Rate of events for which CTBParticleType could not be computed, and thus the initialized value remained (that is CTBParticleType == -1). </description>
    </object>

    <object>
      <name> CTBParticleType_equalZero </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ CTBParticleType==0 ]]></cut>
      <type> rate </type>
      <description> Rate of events with CTBParticleType == 0. </description>
    </object>

    <object>
      <name> CTBParticleType_lepton </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ CTBParticleType==1 ]]></cut>
      <type> rate </type>
      <description> Rate of e-/e+ events, according to CTBParticleType variable (that is CTBParticleType==1). </description>
    </object>

       <object>
      <name> CTBParticleType_proton </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ CTBParticleType==2 ]]></cut>
      <type> rate </type>
      <description> Rate of proton events, according to CTBParticleType variable (that is CTBParticleType==2). </description>
    </object>

        <object>
      <name> CTBParticleType_alpha </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ CTBParticleType==3]]></cut>
      <type> rate </type>
      <description> Rate of alpha events, according to CTBParticleType variable (that is CTBParticleType==3). </description>
    </object>

     <object>
      <name> CTBParticleType_heavy </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ CTBParticleType==4 ]]></cut>
      <type> rate </type>
      <description> Rate of heavy ion events, according to CTBParticleType variable (that is CTBParticleType==4). </description>
    </object>

    <!-- New particle types based on merit variable EvtCREventClass -->

     <object>
      <name> LowEnergyElectrons </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ EvtCREventClassBitMap[0]]]></cut>
      <type> rate </type>
      <description>  Rate of Low Energy Electron (LEE) events, determined with the merit variable EvtCREventClass </description>
     </object>

     <object>
      <name> HighEnergyElectrons </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ EvtCREventClassBitMap[1]]]></cut>
      <type> rate </type>
      <description>  Rate of High Energy Electron (HEE) events, determined with the merit variable EvtCREventClass </description>
     </object>

     <object>
      <name> ProtonHiAccept </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ EvtCREventClassBitMap[8]]]></cut>
      <type> rate </type>
      <description>  Rate of High acceptence proton sample events, determined with the merit variable EvtCREventClass </description>
     </object>

     <object>
      <name> ProtonHiPure </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ EvtCREventClassBitMap[9]]]></cut>
      <type> rate </type>
      <description>  Rate of High purity proton sample events, determined with the merit variable EvtCREventClass </description>
     </object>

     <object>
      <name> ProtonHiQual </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ EvtCREventClassBitMap[10]]]></cut>
      <type> rate </type>
      <description>  Rate of High purity and high quality reconstruction proton sample events, determined with the merit variable EvtCREventClass </description>
     </object>

     <object>
      <name> Alpha </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ EvtCREventClassBitMap[16]]]></cut>
      <type> rate </type>
      <description>  Rate of Alpha Particle events, determined with the merit variable EvtCREventClass </description>
     </object>

     <object>
      <name> Heavy </name>
      <formula><![CDATA[ 1 ]]></formula>
      <cut><![CDATA[ EvtCREventClassBitMap[20]]]></cut>
      <type> rate </type>
      <description>  Rate of Heavy ion events, determined with the merit variable EvtCREventClass </description>
     </object>

    


    <!-- FT1 Variables -->

     <object>
      <name> FT1Energy</name>
      <formula><![CDATA[ FT1Energy ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of FT1Energy</description>
    </object>

    <object>
      <name> FT1Theta</name>
      <formula><![CDATA[ FT1Theta ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1Theta</description>
    </object>

     <object>
      <name> FT1Phi</name>
      <formula><![CDATA[ FT1Phi ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1Phi</description>
    </object>

    <object>
      <name> FT1ZenithTheta</name>
      <formula><![CDATA[ FT1ZenithTheta ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1ZenithTheta </description>
    </object>



    <object>
      <name> FT1EarthAzimuth</name>
      <formula><![CDATA[ FT1EarthAzimuth ]]></formula>
      <cut><![CDATA[]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1EarthAzimuth</description>
    </object>


    


      <object>
      <name> FT1Energy_export</name>
      <formula><![CDATA[ FT1Energy ]]></formula>
      <cut><![CDATA[(FswGamState==0)  && CTBCORE>0. && CTBBestEnergyProb>0. && CTBBestEnergy>10 && CTBBestEnergyRatio<5 && CTBClassLevel>0]]></cut>
      <type> mean </type>
      <description> Mean value (per evt) of FT1Energy, for those events surviving the Gamma Transient cuts.</description>
    </object>

    <object>
      <name> FT1Theta_export</name>
      <formula><![CDATA[ FT1Theta ]]></formula>
      <cut><![CDATA[(FswGamState==0)  && CTBCORE>0. && CTBBestEnergyProb>0. && CTBBestEnergy>10 && CTBBestEnergyRatio<5 && CTBClassLevel>0]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1Theta, for those events surviving the Gamma Transient cuts.</description>
    </object>

     <object>
      <name> FT1Phi_export</name>
      <formula><![CDATA[ FT1Phi ]]></formula>
      <cut><![CDATA[(FswGamState==0)  && CTBCORE>0. && CTBBestEnergyProb>0. && CTBBestEnergy>10 && CTBBestEnergyRatio<5 && CTBClassLevel>0]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1Phi, for those events surviving the Gamma Transient cuts.</description>
    </object>

    <object>
      <name> FT1ZenithTheta_export</name>
      <formula><![CDATA[ FT1ZenithTheta ]]></formula>
      <cut><![CDATA[(FswGamState==0)  && CTBCORE>0. && CTBBestEnergyProb>0. && CTBBestEnergy>10 && CTBBestEnergyRatio<5 && CTBClassLevel>0]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1ZenithTheta, for those events surviving the Gamma Transient cuts. </description>
    </object>



    <object>
      <name> FT1EarthAzimuth_export</name>
      <formula><![CDATA[ FT1EarthAzimuth ]]></formula>
      <cut><![CDATA[(FswGamState==0)  && CTBCORE>0. && CTBBestEnergyProb>0. && CTBBestEnergy>10 && CTBBestEnergyRatio<5 && CTBClassLevel>0]]></cut>
      <type> truncatedmean[0,360] </type>
      <description> Mean value (per evt) of FT1EarthAzimuth, for those events surviving the Gamma Transient cuts.</description>
    </object>

     
    	  
  </outputList>

  <eventCut><![CDATA[ ]]></eventCut>
  <timestamp> timestampdouble </timestamp>
</monitoring>
